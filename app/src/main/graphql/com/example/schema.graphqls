type AnimeCommentModel {
  author: UserPublicModel!

  createTime: DateTime!

  likesCount: Int!

  text: String!

  updateTime: DateTime!

  violations: [String!]!
}

type AnimeEstimateModel {
  base: AnimeSimpleModel!

  score: Int

  status: ListStatusEnum!

  watchedSeries: Int!
}

"""
Anime Full Data
"""
type AnimeFullModel {
  _id: String!

  dates: DatesModel!

  """
  Description of the anime
  """
  description: LanguageModel!

  episodes: EpisodesModel!

  """
  Related other projects with this anime
  """
  franchise: FranchiseSimpleModel

  """
  Genres of this anime
  """
  genres: [GenreSimpleModel!]!

  kind: KindEnum!

  labels: LabelsModel!

  otherPlatforms: [OtherPlatformFullModel!]!

  """
  Anime cover
  """
  poster: String

  rating: RatingEnum!

  related: [RelatedAnimeFullModel!]!

  score: UserScoresModel!

  """
  Anime screenshots
  """
  screenshots: [String!]!

  shikiId: Int!

  status: StatusEnum!

  """
  The studios that developed this anime
  """
  studios: [StudioSimpleModel!]!

  """
  Anime last update date
  """
  updateDate: DateTime!

  userData: AnimeUserDataModel!

  usersList: UserListModel!

  """
  Trailers, teasers, announcements and other videos related to anime
  """
  videos: [VideModel!]!
}

"""
Anime Data
"""
type AnimeSimpleModel {
  _id: String!

  dates: DatesModel!

  """
  Description of the anime
  """
  description: LanguageModel!

  episodes: EpisodesModel!

  """
  Related other projects with this anime (_id)
  """
  franchise: String

  """
  Genres of this anime (_id)
  """
  genres: [String!]!

  kind: KindEnum!

  labels: LabelsModel!

  otherPlatforms: [OtherPlatformSimpleModel!]!

  """
  Anime cover
  """
  poster: String

  rating: RatingEnum!

  related: [RelatedAnimeSimpleModel!]!

  score: UserScoresModel!

  """
  Anime screenshots
  """
  screenshots: [String!]!

  shikiId: Int!

  status: StatusEnum!

  """
  The studios that developed this anime (_id)
  """
  studios: [String!]!

  """
  Anime last update date
  """
  updateDate: DateTime!

  userData: AnimeUserDataModel!

  usersList: UserListModel!

  """
  Trailers, teasers, announcements and other videos related to anime
  """
  videos: [VideModel!]!
}

type AnimeUserDataModel {
  animeStatus: ListStatusEnum

  score: Int

  watchedSeries: Int
}

input DateBetweenQuery {
  from: DateTime = null

  to: DateTime = null
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
Date information
"""
type DatesModel {
  """
  Anime release date
  """
  airedOn: DateTime

  """
  Anime release date
  """
  releasedOn: DateTime
}

"""
General information about anime series
"""
type EpisodesModel {
  airedCount: Int!

  averageDuration: Int!

  """
  Number of episodes/Episodes planned (if null, then the number of series is unlimited)
  """
  count: Int

  lastEpisodeAiredDate: DateTime

  nextEpisodeAiredDate: DateTime

  singleEpisodes: [SingleEpisodeModel!]!
}

"""
Facts about anime/manga/Japan, etc.
"""
type FactModel {
  _id: String!

  en: String

  ru: String
}

"""
Limit documents by these parameters
"""
input FilterAnimeQuery {
  """
  Anime _ids
  """
  _id_ID: [String!] = null

  dates_airedOn: DateBetweenQuery = null

  dates_releasedOn: DateBetweenQuery = null

  episodes_airedCount: IntBetweenQuery = null

  episodes_averageDuration: DateBetweenQuery = null

  episodes_lastEpisodeAiredDate: DateBetweenQuery = null

  episodes_nextEpisodeAiredDate: DateBetweenQuery = null

  """
  Franchise _ids
  """
  franchises_ID_ONLY: [String!] = null

  """
  Genre _ids
  """
  genres_ID_ONLY: [String!] = null

  kind: [KindEnum!] = null

  rating: [RatingEnum!] = null

  score_averageScore: FloatBetweenQuery = null

  shikiId: [Float!] = null

  status: [StatusEnum!] = null

  """
  Studio _ids
  """
  studios_ID_ONLY: [String!] = null
}

"""
Filter values
"""
input FilterFactQuery {
  _id: [String!] = null
}

"""
Filter values
"""
input FilterFranchiseQuery {
  _id: [String!] = null

  name_en: [String!] = null

  name_ru: [String!] = null

  shikiId: [String!] = null
}

"""
Filter values
"""
input FilterGenreQuery {
  _id: [String!] = null

  name_en: [String!] = null

  name_ru: [String!] = null
}

"""
Filter values
"""
input FilterPlatformQuery {
  _id: [String!] = null

  name_en: [String!] = null

  name_ru: [String!] = null

  shikiId: [String!] = null
}

"""
Filter values
"""
input FilterStudioQuery {
  _id: [String!] = null

  name: [String!] = null
}

input FilterUserQuery {
  _id_ID: String = null

  username: String = null
}

input FloatBetweenQuery {
  from: Float = null

  to: Float = null
}

"""
Related projects
"""
type FranchiseFullModel {
  _id: String!

  description: LanguageModel!

  name: LanguageModel!

  relatedWorks: [AnimeSimpleModel!]!

  shikiId: String!
}

"""
Related projects
"""
type FranchiseSimpleModel {
  _id: String!

  description: LanguageModel!

  name: LanguageModel!

  """
  Anime _ids
  """
  relatedWorks: [String!]!

  shikiId: String!
}

"""
Anime arguments
"""
input GeneralAnimeQuery {
  """
  Number of output items
  """
  count: Int! = 10

  filter: FilterAnimeQuery = null

  """
  Set to true if pagination is not needed (Speeds up queries)
  """
  isPaginationOff: Boolean! = false

  limit: LimitQuantityAnimeQuery = null

  """
  Page when paginated
  """
  page: Int! = 1

  """
  Search anime by all titles (including incorrect case)
  """
  searchInput: String = null

  sort: SortAnimeQuery = null

  userFilters: UserFilterQuery = null
}

"""
Franchise arguments
"""
input GeneralFranchiseQuery {
  """
  Number of output items
  """
  count: Int! = 10

  filter: FilterFranchiseQuery = null

  """
  Page when paginated
  """
  page: Int! = 1
}

"""
Genre arguments
"""
input GeneralGenreQuery {
  """
  Number of output items
  """
  count: Int! = 10

  filter: FilterGenreQuery = null

  """
  Page when paginated
  """
  page: Int! = 1
}

"""
Platform arguments
"""
input GeneralPlatformQuery {
  """
  Number of output items
  """
  count: Int! = 10

  filter: FilterPlatformQuery = null

  """
  Page when paginated
  """
  page: Int! = 1
}

"""
Studio arguments
"""
input GeneralStudioQuery {
  """
  Number of output items
  """
  count: Int! = 10

  filter: FilterStudioQuery = null

  """
  Page when paginated
  """
  page: Int! = 1
}

"""
User arguments (If you pass an access-token, it will return the anime of a specific user) 
"""
input GeneralUserQuery {
  animeListStatus: ListStatusEnum = null

  filter: FilterUserQuery = null
}

"""
Data on anime genres
"""
type GenreFullModel {
  _id: String!

  description: LanguageModel!

  name: LanguageModel!

  relatedWorks: [AnimeSimpleModel!]!
}

"""
Data on anime genres
"""
type GenreSimpleModel {
  _id: String!

  description: LanguageModel!

  name: LanguageModel!

  """
  Anime _ids
  """
  relatedWorks: [String!]!
}

input IntBetweenQuery {
  from: Int = null

  to: Int = null
}

"""
Anime type
"""
enum KindEnum {
  cm

  movie

  music

  none

  ona

  ova

  pv

  special

  tv

  tv_special
}

"""
Names in different languages
"""
type LabelsModel {
  en: String

  ru: String

  """
  Titles in other languages or synonymous with the original
  """
  synonyms: [String!]!
}

type LanguageModel {
  en: String

  ru: String
}

"""
Limitations on the number of a particular field
"""
input LimitQuantityAnimeQuery {
  """
  Number of related
  """
  relatedCount: Int! = 100

  """
  Number of screenshots
  """
  screenshotsCount: Int! = 100

  """
  Number of video
  """
  videosCount: Int! = 100
}

"""
The status the user added to
"""
enum ListStatusEnum {
  added

  completed

  dropped

  watching
}

"""
This anime is on other platforms
"""
type OtherPlatformFullModel {
  platform: PlatformModel!

  """
  Link to this anime on this platform
  """
  url: String!
}

"""
This anime is on other platforms
"""
type OtherPlatformSimpleModel {
  """
  Platform _id
  """
  platform: String!

  """
  Link to this anime on this platform
  """
  url: String!
}

"""
Platforms on which you can view additional information about a particular anime
"""
type PlatformModel {
  _id: String!

  logo: String

  name: LanguageModel!

  shikiId: String!
}

type Query {
  getAnimeComments("Anime _id" animeId: String!, "Number of output items" count: Int! = 10, "Page when paginated" page: Int! = 1, sort: SortAnimeCommentQuery = null): [AnimeCommentModel!]!

  getAnimes(animeQuery: GeneralAnimeQuery! = {
    count: 10
    isPaginationOff: false
    page: 1
    userFilters: {

    }

  }
  , franchiseQuery: GeneralFranchiseQuery! = {
    count: 100
    page: 1
  }
  , genreQuery: GeneralGenreQuery! = {
    count: 100
    page: 1
  }
  , isWithoutRelations: Boolean! = true, platformQuery: GeneralPlatformQuery! = {
    count: 100
    page: 1
  }
  , studioQuery: GeneralStudioQuery! = {
    count: 10
    page: 1
  }
  ): [AnimeFullModel!]!

  getFacts("Number of output items" count: Int! = 10, filter: FilterFactQuery = null, "Page when paginated" page: Int! = 1): [FactModel!]!

  getFranchises(animeQuery: GeneralAnimeQuery! = {
    count: 10
    page: 1
  }
  , franchiseQuery: GeneralFranchiseQuery! = {
    count: 10
    page: 1
  }
  ): [FranchiseFullModel!]!

  getGenres(animeQuery: GeneralAnimeQuery! = {
    count: 10
    page: 1
  }
  , genreQuery: GeneralGenreQuery! = {
    count: 10
    page: 1
  }
  ): [GenreFullModel!]!

  getPlatforms(platformQuery: GeneralPlatformQuery! = {
    count: 10
    page: 1
  }
  ): [PlatformModel!]!

  getStudios(animeQuery: GeneralAnimeQuery! = {
    count: 10
    page: 1
  }
  , studioQuery: GeneralStudioQuery! = {
    count: 10
    page: 1
  }
  ): [StudioFullModel!]!

  getUserPublicData(animeQuery: GeneralAnimeQuery! = {
    count: 20
    isPaginationOff: false
    page: 1
  }
  , userQuery: GeneralUserQuery! = {

  }
  ): UserPublicFullModel!
}

"""
Anime age rating
"""
enum RatingEnum {
  g

  none

  pg

  pg_13

  r

  r_plus

  rx
}

"""
Related anime projects
"""
type RelatedAnimeFullModel {
  base: AnimeSimpleModel!

  """
  Names of the bundle of this anime project
  """
  relation: LanguageModel!

  shikiId: Int!
}

"""
Related anime projects
"""
type RelatedAnimeSimpleModel {
  """
  Anime _id
  """
  base: String!

  """
  Names of the bundle of this anime project
  """
  relation: LanguageModel!

  shikiId: Int!
}

"""
User's role on the project
"""
enum RoleEnum {
  admin

  moderator

  user
}

"""
Information about each series separately
"""
type SingleEpisodeModel {
  """
  Episode release date
  """
  airedOn: DateTime

  """
  Episode duration
  """
  duration: Int!

  """
  Episode title
  """
  name: String
}

"""
Sorting documents (false - ascending; true - descending)
"""
input SortAnimeCommentQuery {
  createTime: Boolean = null

  likesCount: Boolean = null
}

"""
Sorting documents (false - ascending; true - descending)
"""
input SortAnimeQuery {
  dates_airedOn: Boolean = null

  dates_releasedOn: Boolean = null

  episodes_airedCount: Boolean = null

  episodes_averageDuration: Boolean = null

  episodes_lastEpisodeAiredDate: Boolean = null

  episodes_nextEpisodeAiredDate: Boolean = null

  score_averageScore: Boolean = null

  score_count: Boolean = null

  usersList_generalCount: Boolean = null
}

"""
Release status of this anime
"""
enum StatusEnum {
  anons

  ongoing

  released
}

"""
The studios that are developing this or that anime
"""
type StudioFullModel {
  _id: String!

  description: LanguageModel!

  logo: String

  name: String!

  relatedWorks: [AnimeSimpleModel!]!
}

"""
The studios that are developing this or that anime
"""
type StudioSimpleModel {
  _id: String!

  description: LanguageModel!

  logo: String

  name: String!

  relatedWorks: [String!]!
}

"""
User anime display settings
"""
input UserFilterQuery {
  """
  Remove from the results all anime that are added to the skip list
  """
  isHiddenAnimeInSkipList: Boolean = false

  """
  Delete all anime that are in the user's list
  """
  isHiddenAnimeInUserList: Boolean = false
}

type UserListModel {
  addedCount: Int!

  completedCount: Int!

  droppedCount: Int!

  generalCount: Int!

  watchingCount: Int!
}

type UserPublicFullModel {
  _id: String!

  animeEstimates: [AnimeEstimateModel!]!

  avatar: String

  email: String!

  lastOnlineDate: DateTime!

  role: RoleEnum!

  username: String!
}

type UserPublicModel {
  _id: String!

  avatar: String

  email: String!

  lastOnlineDate: DateTime!

  role: RoleEnum!

  username: String!
}

type UserScoresModel {
  averageScore: Float!

  count: Int!
}

"""
Project video sources (trailers, teasers, etc.)
"""
type VideModel {
  name: String

  url: String!
}

schema {
  query: Query
}
