// Generated by Dagger (https://dagger.dev).
package com.example.bisky.ui.screen.searchpage.searchrootscreen;

import com.example.bisky.domain.eventbus.search.SearchEventBus;
import com.example.bisky.domain.repository.searchanime.SearchAnimeRepository;
import com.example.bisky.ui.screen.searchpage.searchrootscreen.mapper.SearchAnimeMapper;
import com.example.bisky.ui.screen.searchpage.searchrootscreen.mapper.TextSearchUIMapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SearchViewModel_Factory implements Factory<SearchViewModel> {
  private final Provider<TextSearchUIMapper> textSearchUIMapperProvider;

  private final Provider<SearchAnimeRepository> searchAnimeRepositoryProvider;

  private final Provider<SearchAnimeMapper> searchAnimeMapperProvider;

  private final Provider<SearchEventBus> searchEventBusProvider;

  public SearchViewModel_Factory(Provider<TextSearchUIMapper> textSearchUIMapperProvider,
      Provider<SearchAnimeRepository> searchAnimeRepositoryProvider,
      Provider<SearchAnimeMapper> searchAnimeMapperProvider,
      Provider<SearchEventBus> searchEventBusProvider) {
    this.textSearchUIMapperProvider = textSearchUIMapperProvider;
    this.searchAnimeRepositoryProvider = searchAnimeRepositoryProvider;
    this.searchAnimeMapperProvider = searchAnimeMapperProvider;
    this.searchEventBusProvider = searchEventBusProvider;
  }

  @Override
  public SearchViewModel get() {
    return newInstance(textSearchUIMapperProvider.get(), searchAnimeRepositoryProvider.get(), searchAnimeMapperProvider.get(), searchEventBusProvider.get());
  }

  public static SearchViewModel_Factory create(
      Provider<TextSearchUIMapper> textSearchUIMapperProvider,
      Provider<SearchAnimeRepository> searchAnimeRepositoryProvider,
      Provider<SearchAnimeMapper> searchAnimeMapperProvider,
      Provider<SearchEventBus> searchEventBusProvider) {
    return new SearchViewModel_Factory(textSearchUIMapperProvider, searchAnimeRepositoryProvider, searchAnimeMapperProvider, searchEventBusProvider);
  }

  public static SearchViewModel newInstance(TextSearchUIMapper textSearchUIMapper,
      SearchAnimeRepository searchAnimeRepository, SearchAnimeMapper searchAnimeMapper,
      SearchEventBus searchEventBus) {
    return new SearchViewModel(textSearchUIMapper, searchAnimeRepository, searchAnimeMapper, searchEventBus);
  }
}
